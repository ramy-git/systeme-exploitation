/**
 * \file
 * \brief Main header
 */
#pragma once

#include <semaphore.h>
#include <fcntl.h>
#include <semaphore.h>

/**
 * Structure containing configurable parameters
 */
struct options
{
    /**
     * -a option
     */
    int automatic;
    /**
     * -t option
     */
    int time;
    /**
     * -n
     */
    int max_car;
};

/**
 * Structure containing internal car data
 */
struct car_data
{
    /**
     * car id (name)
     */
    int id;
    /**
     * car traffic light (road)
     */
    int light;
};

/**
 * Main structure, containing runtime informations
 */
struct carrefour_data
{
    /**
     * live count of cars in a road
     */
    int counts[2];
    /**
     * active traffic light
     */
    int light;
    /**
     * should the program turn off ?
     */
    int end;
    /**
     * parsed options
     */
    struct options opt;
};

/**
 * Utility function which parses inputs arguments
 * \param argc argument count
 * \param args argument strigns
 * \return parsed options
 */
struct options parse_opts(int argc, char **args);

/**
 * Utility function which sleep a random amount of time (in range [0; opt.automatic]).
 * Used by car creation loop.
 */
void random_sleep(void);

/**
 * Utility function that checks if there is input is STDIN
 * \return boolean
 */
int has_input();

/**
 * Utility function which turn on a traffic light
 *
 * \param time information for printing
 * \param light to turn on
 */
void set_traffic_light(int time, int light);

/**
 * Utility function which adds a new car and create a watcher thread for it.
 *
 * \param id ID (name) of the car
 * \param light Traffic light / road associated to car
 */
void create_new_car(int id, int light);

/**
 * Waits for a car to pass. Should be executed in a separated thread
 * \param data `struct car_data`
 * \return NULL
 */
void *wait_light_loop(void *data);

/**
 * Automatic loop for new cars. Should be executed in a separated thread.
 * \param unused unused parameter for pthread
 * \return NULL
 */
void *new_car_loop(void *unused);

/**
 * Main loop which switchs between lights
 */
void traffic_light_loop();
